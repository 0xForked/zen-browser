diff --git a/toolkit/profile/nsToolkitProfileService.cpp b/toolkit/profile/nsToolkitProfileService.cpp
index aeab25c61f3b04cfa19ec93e2abe0772d8656e61..b2ddb042b2e114f37c283cd1fb401a388cbc61b9 100644
--- a/toolkit/profile/nsToolkitProfileService.cpp
+++ b/toolkit/profile/nsToolkitProfileService.cpp
@@ -234,13 +234,14 @@ void RemoveProfileFiles(nsIToolkitProfile* aProfile, bool aInBackground) {
 }
 
 nsToolkitProfile::nsToolkitProfile(const nsACString& aName, nsIFile* aRootDir,
-                                   nsIFile* aLocalDir, bool aFromDB)
+                                   nsIFile* aLocalDir, bool aFromDB, const nsACString& aZenAvatarPath)
     : mName(aName),
       mRootDir(aRootDir),
       mLocalDir(aLocalDir),
       mLock(nullptr),
       mIndex(0),
-      mSection("Profile") {
+      mSection("Profile"),
+      mZenAvatarPath(aZenAvatarPath){
   NS_ASSERTION(aRootDir, "No file!");
 
   RefPtr<nsToolkitProfile> prev =
@@ -253,8 +254,13 @@ nsToolkitProfile::nsToolkitProfile(const nsACString& aName, nsIFile* aRootDir,
   nsToolkitProfileService::gService->mProfiles.insertBack(this);
 
   // If this profile isn't in the database already add it.
+  nsINIParser* db = &nsToolkitProfileService::gService->mProfileDB;
   if (!aFromDB) {
-    nsINIParser* db = &nsToolkitProfileService::gService->mProfileDB;
+    if (mZenAvatarPath == ""_ns) {
+      auto randomId = std::rand() % 100;
+      mZenAvatarPath = ("chrome://browser/content/zen-avatars/avatar-" + std::to_string(randomId) + ".svg").c_str();
+    }
+
     db->SetString(mSection.get(), "Name", mName.get());
 
     bool isRelative = false;
@@ -264,6 +270,7 @@ nsToolkitProfile::nsToolkitProfile(const nsACString& aName, nsIFile* aRootDir,
 
     db->SetString(mSection.get(), "IsRelative", isRelative ? "1" : "0");
     db->SetString(mSection.get(), "Path", descriptor.get());
+    db->SetString(mSection.get(), "ZenAvatarPath", mZenAvatarPath.get());
   }
 }
 
@@ -318,6 +325,8 @@ nsToolkitProfile::SetName(const nsACString& aName) {
   return NS_OK;
 }
 
+#include "zenProfileMethodsOverride.inc.cpp"
+
 nsresult nsToolkitProfile::RemoveInternal(bool aRemoveFiles,
                                           bool aInBackground) {
   NS_ASSERTION(nsToolkitProfileService::gService, "Whoa, my service is gone.");
@@ -992,7 +1001,15 @@ nsresult nsToolkitProfileService::Init() {
       localDir = rootDir;
     }
 
-    currentProfile = new nsToolkitProfile(name, rootDir, localDir, true);
+    nsAutoCString zenProfileAvatar;
+
+    rv = mProfileDB.GetString(profileID.get(), "ZenAvatarPath", zenProfileAvatar);
+    if (NS_FAILED(rv)) {
+      NS_ERROR("Malformed profiles.ini: ZenAvatarPath= not found");
+      continue;
+    }
+
+    currentProfile = new nsToolkitProfile(name, rootDir, localDir, true, zenProfileAvatar);
 
     // If a user has modified the ini file path it may make for a valid profile
     // path but not match what we would have serialised and so may not match
@@ -1995,7 +2012,7 @@ nsToolkitProfileService::CreateProfile(nsIFile* aRootDir,
   NS_ENSURE_SUCCESS(rv, rv);
 
   nsCOMPtr<nsIToolkitProfile> profile =
-      new nsToolkitProfile(aName, rootDir, localDir, false);
+      new nsToolkitProfile(aName, rootDir, localDir, false, ""_ns);
 
   if (aName.Equals(DEV_EDITION_NAME)) {
     mDevEditionDefault = profile;
